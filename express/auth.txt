//JWT
JWT is a compact URL-safe means of representing claims to be transferred between two parties
    Header:  consists of two parts: the type of the token, which is JWT, and the signing algorithm being used
    Example: {
                "alg": "HS256",
                "typ": "JWT"
            }
    
    Payload: contains the claims. Claims are statements about an entity (typically, the user) and additional data
    Example: {
            "sub": "1234567890",
            "name": "John Doe",
            "admin": true
            }

    Signature:  the signature part you have to take the encoded header
    Example: {
            HMACSHA256(
            base64UrlEncode(header) + "." +
            base64UrlEncode(payload),
            secret)
            }


//Authentication:
Authentication is the process of verifying the identity of a user or entity.
It ensures that the user or entity is who they claim to be. Authentication is typically performed by presenting credentials, such as a username and password, to a system or application.
The system then verifies these credentials against a stored record to authenticate the user's identity. Other authentication methods include biometric authentication (e.g., fingerprint or facial recognition) or using digital certificates.


//Authorization:
Authorization, on the other hand, is the process of granting or denying access rights and permissions to authenticated users or entities. Once a user's identity is authenticated,
authorization determines what actions or resources the user is allowed to access.
Authorization is typically based on predefined rules or policies that specify what permissions or privileges are associated with different user roles or levels of access.